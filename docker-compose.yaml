version: "3"

volumes:
  Databases:
    driver: 'local'

networks:
  POC_network:
    name: POC_network
    driver: 'bridge'

services:
 product-microservice:
    container_name: product-microservice
    restart: always
    image: product
    build: \POC-ProductMicroservice
    ports:
      - 8888:8888
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysqldb:3306/poc?autoReconnect=true&allowPublicKeyRetrieval=true&useSSL=false
      MYSQL_USER: root
      MYSQL_PASSWORD: 1234
      KAFKA_HOST: kafka-server
      KAFKA_PORT: 9092
    depends_on:
      - kafka-server
      - mysqldb

 logger-microservice:
    container_name: logger-microservice
    restart: always
    image: logger
    build: \POC-LoggerMicroservice
    ports:
      - 8888
    environment:
      MONGODB_HOST: mongodb
      MONGODB_USER: admin
      MONGODB_PASSWORD: 1234
      MONGODB_DATABASE: poc_logs
      MONGODB_PORT: 27017
      KAFKA_HOST: kafka-server
      KAFKA_PORT: 9092
    depends_on:
      - mongodb
      - kafka-server

 cart-microservice:
    container_name: cart-microservice
    restart: always
    image: cart
    build: \POC-CartMicroservice
    ports:
      - 8889:8888
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysqldb:3306/poc?autoReconnect=true&allowPublicKeyRetrieval=true&useSSL=false
      MYSQL_USER: root
      MYSQL_PASSWORD: 1234
    depends_on:
      - mysqldb
      
 zookeeper:
    container_name: zookeeper-server
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2182:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      
 kafka:
    container_name: kafka-server
    image: 'bitnami/kafka:latest'
    ports:
      - '9093:9092'
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper-server:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

 mysqldb:
    container_name: mysqldb
    image: mysql
    volumes: 
       - Databases:/var/lib/mysql
    ports:
      - 3307:3306
    environment:
      MYSQL_DATABASE: poc
      MYSQL_ROOT_PASSWORD: 1234

      
 mongo:
    container_name: mongodb
    image: mongo
    restart: always
    volumes: 
       - Databases:/data/db
    ports:
    - 27018:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: 1234


    
